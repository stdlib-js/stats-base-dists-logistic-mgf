{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport sinc from '@stdlib/math-base-special-sinc';\nimport exp from '@stdlib/math-base-special-exp';\nimport abs from '@stdlib/math-base-special-abs';\n\n\n// MAIN //\n\n/**\n* Evaluates the moment-generating function (MGF) for a logistic distribution with mean `mu` and scale parameter `s` at a value `t`.\n*\n* @param {number} t - input value\n* @param {number} mu - mean\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {number} evaluated MGF\n*\n* @example\n* var y = mgf( 0.9, 0.0, 1.0 );\n* // returns ~9.15\n*\n* @example\n* var y = mgf( 0.1, 4.0, 4.0 );\n* // returns ~1.971\n*\n* @example\n* var y = mgf( -0.2, 4.0, 4.0 );\n* // returns ~1.921\n*\n* @example\n* var y = mgf( 0.5, 0.0, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = mgf( 0.5, 0.0, 4.0 );\n* // returns NaN\n*\n* @example\n* var y = mgf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = mgf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = mgf( 0.0, 0.0, NaN );\n* // returns NaN\n*/\nfunction mgf( t, mu, s ) {\n\tvar st;\n\tst = s * t;\n\tif (\n\t\tisnan( st ) ||\n\t\tisnan( mu ) ||\n\t\ts < 0.0 ||\n\t\tabs( st ) > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\treturn exp( mu * t ) / sinc( st );\n}\n\n\n// EXPORTS //\n\nexport default mgf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport constantFunction from '@stdlib/utils-constant-function';\nimport { factory as degenerate } from '@stdlib/stats-base-dists-degenerate-mgf';\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport sinc from '@stdlib/math-base-special-sinc';\nimport exp from '@stdlib/math-base-special-exp';\nimport abs from '@stdlib/math-base-special-abs';\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the moment-generating function (MGF) of a logistic distribution with mean `mu` and scale parameter `s`.\n*\n* @param {number} mu - mean\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {Function} MGF\n*\n* @example\n* var mgf = factory( 10.0, 0.5 );\n*\n* var y = mgf( 0.5 );\n* // returns ~164.846\n*\n* y = mgf( 2.0 );\n* // returns Infinity\n*/\nfunction factory( mu, s ) {\n\tif ( isnan( mu ) || isnan( s ) || s < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn degenerate( mu );\n\t}\n\treturn mgf;\n\n\t/**\n\t* Evaluates the moment-generating function (MGF) for a logistic distribution.\n\t*\n\t* @private\n\t* @param {number} t - input value\n\t* @returns {number} evaluated MGF\n\t*\n\t* @example\n\t* var y = mgf( 0.5 );\n\t* // returns <number>\n\t*/\n\tfunction mgf( t ) {\n\t\tvar st = s * t;\n\t\tif ( abs( st ) > 1.0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn exp( mu * t ) / sinc( st );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the moment-generating function (MGF) for a logistic distribution.\n*\n* @module @stdlib/stats-base-dists-logistic-mgf\n*\n* @example\n* import mgf from '@stdlib/stats-base-dists-logistic-mgf';\n*\n* var y = mgf( 0.9, 0.0, 1.0 );\n* // returns ~9.15\n*\n* y = mgf( 0.1, 4.0, 4.0 );\n* // returns ~1.971\n*\n* y = mgf( -0.2, 4.0, 4.0 );\n* // returns ~1.921\n*\n* var mymgf = mgf.factory( 10.0, 0.5 );\n*\n* y = mymgf( 0.5 );\n* // returns ~164.846\n*\n* y = mymgf( 2.0 );\n* // returns Infinity\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["mgf","t","mu","s","st","isnan","abs","NaN","exp","sinc","factory","constantFunction","degenerate","setReadOnly","main"],"mappings":";;osBAsEA,SAASA,EAAKC,EAAGC,EAAIC,GACpB,IAAIC,EAEJ,OACCC,EAFDD,EAAKD,EAAIF,IAGRI,EAAOH,IACPC,EAAI,GACJG,EAAKF,GAAO,EAELG,IAEDC,EAAKN,EAAKD,GAAMQ,EAAML,EAC9B,CClCA,SAASM,EAASR,EAAIC,GACrB,OAAKE,EAAOH,IAAQG,EAAOF,IAAOA,EAAI,EAC9BQ,EAAkBJ,KAEf,IAANJ,EACGS,EAAYV,GAepB,SAAcD,GACb,IAAIG,EAAKD,EAAIF,EACb,GAAKK,EAAKF,GAAO,EAChB,OAAOG,IAER,OAAOC,EAAKN,EAAKD,GAAMQ,EAAML,EAC7B,CACF,CCpBAS,EAAAC,EAAA,UAAAJ"}